Указатели в с++.
У каждой переменной есть свой индивидуальный адрес.
Адрес переменной это путь по которому находится значение этой переменной.
Обычно он записывается в 16-ом виде.

Переменные которые создаются в программе по завершению автоматически удаляются, чтобы не загружать память компьютера
В с++ присутсвует возможность обратиться к переменной удалить её и создать в другом участке памяти.
Соответственно указатель это переменная, в которой храниться адресм другой переменной.
Чтобы пользоваться указателями требуются 2 оператора:
1) * - показывает значение переменной по заданному адресу
2) & - показывает адрес переменной.
Для того чтобы создать указатель нужно:
int* <name_pointer> = &<name_variable>;
В самом начале ставиться оператор для того чтобы дать компилятору инстуркцию,
затем имя переменной и посе знака = необходимо указателю передать адреать другой переменной.
Задача:
Отец ребёнка работает программистом в крупной компании, которая нахоидтся в 0x145 
и ему предложили поехать в командировку 0х195, отец смог оповестить об этом только совего сына, поэтому надо передать 
эту инфу маме.
#include <iostream>

using namespace std;

int main() {
    setlocale(0, "");
    int dad_gorod;
    int* dad_son = &dad_gorod;
    int* mama = dad_son;
    system("pause");
    return 0;
}

Классы в с++.
ООП
1) Инкапсуляция;
2) Полиморфизм;
3) Наследование
Класс - определённый пользователем тип данных.
Одна из отличительных особенностей класса это наличие идентификатора доступа.
Помимо пермененых челан класса, желательно в теле класса определять функции, 
которые будут с классом взаимодействовать.
В классах помимо переменных членов записыв. функции члены которые оппирируют любыми объектами класса членом, 
которого она явл. и имеет доступ к членам класса
Задание:
Разарботать класс пирамида, который имеет функции для 1) расчёта объёма  2)площади боковой стороны
3) площадь основания треугольное.

Задание для Практики:
1) Необходимо созд. двумерный массив 5 на 5, написать функцию, которая заполнит его случ. числами, созд. ещё 
2 функции 1 
из которых нахидит макс а вторая мин.
2) написать программу которая иммитирует бросание кубиков компом и пользователем.
В игре два кубика и на каждом грань от 1 до 6 очков,
реализовать определение программой первого ходящего. Каждый делает по 4 броска, 
после бросков показать нарисованные симвалами кубики и кол-во очков выпавших на них
например: 
XXX
X X
XXX
В конце показать:
После каждого второго броска выводить промежуточный итог на экран